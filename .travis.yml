language: java
jdk:
  - openjdk8

#Travis CI 를 어느 브랜치가 푸시될때 수행할지 지정
branches:
  only:
    - master

# Travis CI 서버의 Home
# 그레이들로 의존상 받으면 해당디렉토리에 캐시, 같은 의존성은 다음 배포때부터 다시안받도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

#master 브랜치에 푸시되었을때 수행하는 명령어
script: "./gradlew clean build"

#S3이용
before_deploy:
  #- zip -r springboot-webservice *
  #- mkdir -p deploy
  #- mv springboot-webservice.zip deploy/springboot-webservice.zip
  - mkdir -p before-deploy # zip 에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy #상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/springboot-webservice.zip # deploy로 zip파일 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY #트레비스에 설정된값
    secret_access_key: $AWS_SECRET_KEY #트레비스에 설정된값
    bucket: my-springboot2-build # S3버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deploy: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: my-springboot2-build
    key: springboot-webservice.zip #빌드 파일 압축해서 전달
    bundle_type: zip #압축 확장자
    application: my-springboot2-webservice # 웹 콘솔에서 등록 한 CodeDeploy 애플리케이션
    deployment_group: my-springboot2-webservice-group # '' 배포그룹
    region: ap-northeast-2
    wait-until-deployed: true

#CI 실행완료시 메일로 알람
notifications:
  email:
    recipients:
      udon1@naver.com

#  권한주는거
before_install:
  chmod +x gradlew
